const { REST, Routes, SlashCommandBuilder } = require('discord.js');
const { CLIENT_ID, TOKEN } = require('./dbid');
const setClient = require('./SetClient');
const Util = require('./backend/Util');

const commands = [
    new SlashCommandBuilder()
        .setName('ping')
        .setDescription('Replies with the bot\'s ping.'),
    new SlashCommandBuilder()
        .setName('start-raffle')
        .setDescription('Begins the raffle.')
        .addStringOption(option =>
            option.setName('preset')
            .setDescription('The preset duration to use')
            .setRequired(true))
        .addStringOption(option =>
            option.setName('coach-name')
            .setDescription('The coach giving the VOD review.')
            .setRequired(true))
        .addStringOption(option => 
            option.setName('raffle-name')
            .setDescription('The name of the raffle'))
        .addStringOption(option => 
            option.setName('raffle-desc')
            .setDescription('The description of the raffle.')),
    new SlashCommandBuilder()
        .setName('reroll')
        .setDescription('Rerolls the winner'),
    new SlashCommandBuilder()
        .setName('set-preset')
        .setDescription('Sets the desired preset with the given duration (mins).')
        .addStringOption(option =>
            option.setName('preset-name')
            .setDescription('The name of the preset to add.')
            .setRequired(true))
        .addNumberOption(option => 
            option.setName('duration')
            .setDescription('The duration of the raffle in minutes.')
            .setRequired(true)),
    new SlashCommandBuilder()
        .setName('list-presets')
        .setDescription('Lists all presets.'),
    new SlashCommandBuilder()
        .setName('remove-preset')
        .setDescription('Removes the given preset')
        .addStringOption(option => 
            option.setName('preset-name')
            .setDescription('The name of the preset to remove')
            .setRequired(true)),
    new SlashCommandBuilder()
        .setName('entries')
        .setDescription('Tells you how many entries you have in the current raffle'),
    new SlashCommandBuilder()
        .setName('set-role')
        .setDescription('Set a role a user could have to boost their entries.')
        .addStringOption(option =>
            option.setName('role-id')
            .setDescription('The ID of the desired role.')
            .setRequired(true))
        .addIntegerOption(option => 
            option.setName('entries')
            .setDescription('The amount of entries to be given to the user if they have this role')
            .setRequired(true)),
    new SlashCommandBuilder()
        .setName('remove-role')
        .setDescription('Remove a role that could boost a users entries.')
        .addStringOption(option => 
            option.setName('role-id')
            .setDescription('The ID of the desired role.')
            .setRequired(true)),
    new SlashCommandBuilder()
        .setName('list-user-entries')
        .setDescription('See a specific user\'s entries.')
        .addStringOption(option => 
            option.setName('user-id')
            .setDescription('The id of the user.')
            .setRequired(true)),
    new SlashCommandBuilder()
        .setName('end-raffle')
        .setDescription('Ends any ongoing raffles.')
];

const rest = new REST({ version: '10' }).setToken(TOKEN);

(async () => {
    try {
        console.log('Started refreshing application (/) commands.');

        await rest.put(Routes.applicationCommands(CLIENT_ID), { body: commands });

        console.log('Successfully reloaded application (/) commands.');

        await Util.LoadPresets();
        await Util.LoadRoles();
    } 
    catch (e) {
        console.error(e);
    }
})();

setClient(TOKEN);